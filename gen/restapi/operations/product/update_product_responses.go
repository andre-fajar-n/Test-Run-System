// Code generated by go-swagger; DO NOT EDIT.

package product

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// UpdateProductCreatedCode is the HTTP code returned for type UpdateProductCreated
const UpdateProductCreatedCode int = 201

/*
UpdateProductCreated Success update

swagger:response updateProductCreated
*/
type UpdateProductCreated struct {

	/*
	  In: Body
	*/
	Payload *UpdateProductCreatedBody `json:"body,omitempty"`
}

// NewUpdateProductCreated creates UpdateProductCreated with default headers values
func NewUpdateProductCreated() *UpdateProductCreated {

	return &UpdateProductCreated{}
}

// WithPayload adds the payload to the update product created response
func (o *UpdateProductCreated) WithPayload(payload *UpdateProductCreatedBody) *UpdateProductCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update product created response
func (o *UpdateProductCreated) SetPayload(payload *UpdateProductCreatedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProductCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
UpdateProductDefault Server Error

swagger:response updateProductDefault
*/
type UpdateProductDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *UpdateProductDefaultBody `json:"body,omitempty"`
}

// NewUpdateProductDefault creates UpdateProductDefault with default headers values
func NewUpdateProductDefault(code int) *UpdateProductDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateProductDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update product default response
func (o *UpdateProductDefault) WithStatusCode(code int) *UpdateProductDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update product default response
func (o *UpdateProductDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update product default response
func (o *UpdateProductDefault) WithPayload(payload *UpdateProductDefaultBody) *UpdateProductDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update product default response
func (o *UpdateProductDefault) SetPayload(payload *UpdateProductDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProductDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
