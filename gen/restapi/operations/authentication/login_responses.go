// Code generated by go-swagger; DO NOT EDIT.

package authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// LoginCreatedCode is the HTTP code returned for type LoginCreated
const LoginCreatedCode int = 201

/*
LoginCreated Success login

swagger:response loginCreated
*/
type LoginCreated struct {
	/*

	 */
	Token string `json:"token"`

	/*
	  In: Body
	*/
	Payload *LoginCreatedBody `json:"body,omitempty"`
}

// NewLoginCreated creates LoginCreated with default headers values
func NewLoginCreated() *LoginCreated {

	return &LoginCreated{}
}

// WithToken adds the token to the login created response
func (o *LoginCreated) WithToken(token string) *LoginCreated {
	o.Token = token
	return o
}

// SetToken sets the token to the login created response
func (o *LoginCreated) SetToken(token string) {
	o.Token = token
}

// WithPayload adds the payload to the login created response
func (o *LoginCreated) WithPayload(payload *LoginCreatedBody) *LoginCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login created response
func (o *LoginCreated) SetPayload(payload *LoginCreatedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header token

	token := o.Token
	if token != "" {
		rw.Header().Set("token", token)
	}

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
LoginDefault Server Error

swagger:response loginDefault
*/
type LoginDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *LoginDefaultBody `json:"body,omitempty"`
}

// NewLoginDefault creates LoginDefault with default headers values
func NewLoginDefault(code int) *LoginDefault {
	if code <= 0 {
		code = 500
	}

	return &LoginDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the login default response
func (o *LoginDefault) WithStatusCode(code int) *LoginDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the login default response
func (o *LoginDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the login default response
func (o *LoginDefault) WithPayload(payload *LoginDefaultBody) *LoginDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login default response
func (o *LoginDefault) SetPayload(payload *LoginDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
