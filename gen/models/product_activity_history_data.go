// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProductActivityHistoryData product activity history data
//
// swagger:model productActivityHistoryData
type ProductActivityHistoryData struct {

	// created at
	// Format: date-time
	CreatedAt strfmt.DateTime `json:"created_at"`

	// created by
	CreatedBy string `json:"created_by"`

	// note
	Note string `json:"note,omitempty"`

	// product
	Product struct {

		// id
		// Required: true
		ID *uint64 `json:"id"`

		// created at
		// Format: date-time
		CreatedAt *strfmt.DateTime `json:"created_at" gorm:"column:created_at"`

		// deleted at
		// Format: date-time
		DeletedAt *strfmt.DateTime `json:"deleted_at" gorm:"column:deleted_at"`

		// updated at
		// Format: date-time
		UpdatedAt *strfmt.DateTime `json:"updated_at" gorm:"column:updated_at"`

		// created by
		CreatedBy string `json:"created_by"`

		// deleted by
		DeletedBy string `json:"deleted_by"`

		// updated by
		UpdatedBy string `json:"updated_by"`

		// expiry date
		// Format: date-time
		ExpiryDate strfmt.DateTime `json:"expiry_date,omitempty"`

		// name
		Name string `json:"name"`

		// stock
		Stock uint64 `json:"stock,omitempty"`

		// version
		Version uint64 `json:"version,omitempty"`
	} `json:"product,omitempty"`

	// product id
	ProductID uint64 `json:"product_id,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this product activity history data
func (m *ProductActivityHistoryData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProduct(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProductActivityHistoryData) validateCreatedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.CreatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("created_at", "body", "date-time", m.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ProductActivityHistoryData) validateProduct(formats strfmt.Registry) error {
	if swag.IsZero(m.Product) { // not required
		return nil
	}

	if err := validate.Required("product"+"."+"id", "body", m.Product.ID); err != nil {
		return err
	}

	if err := validate.FormatOf("product"+"."+"created_at", "body", "date-time", m.Product.CreatedAt.String(), formats); err != nil {
		return err
	}

	if err := validate.FormatOf("product"+"."+"deleted_at", "body", "date-time", m.Product.DeletedAt.String(), formats); err != nil {
		return err
	}

	if err := validate.FormatOf("product"+"."+"updated_at", "body", "date-time", m.Product.UpdatedAt.String(), formats); err != nil {
		return err
	}

	if err := validate.FormatOf("product"+"."+"expiry_date", "body", "date-time", m.Product.ExpiryDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this product activity history data based on context it is used
func (m *ProductActivityHistoryData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProductActivityHistoryData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProductActivityHistoryData) UnmarshalBinary(b []byte) error {
	var res ProductActivityHistoryData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
